"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[444],{2248:function(e,t,n){n.d(t,{YQ:function(){return S},rk:function(){return H},at:function(){return V},zo:function(){return W},AL:function(){return K},ol:function(){return X},xC:function(){return G},H5:function(){return P},JL:function(){return Z},DD:function(){return k},xV:function(){return q},gh:function(){return z},CD:function(){return A},p$:function(){return Y},wL:function(){return ee},Uy:function(){return J},M4:function(){return ae},Dd:function(){return ue}});var i=n(9477),r="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}",s=class extends i.ShaderMaterial{constructor(){super({name:"AdaptiveLuminanceMaterial",defines:{MIP_LEVEL_1X1:"0.0"},uniforms:{luminanceBuffer0:new i.Uniform(null),luminanceBuffer1:new i.Uniform(null),minLuminance:new i.Uniform(.01),deltaTime:new i.Uniform(0),tau:new i.Uniform(1)},extensions:{shaderTextureLOD:!0},blending:i.NoBlending,depthWrite:!1,depthTest:!1,fragmentShader:"#include <packing>\n#define packFloatToRGBA(v) packDepthToRGBA(v)\n#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)\nuniform lowp sampler2D luminanceBuffer0;uniform lowp sampler2D luminanceBuffer1;uniform float minLuminance;uniform float deltaTime;uniform float tau;varying vec2 vUv;void main(){float l0=unpackRGBAToFloat(texture2D(luminanceBuffer0,vUv));\n#if __VERSION__ < 300\nfloat l1=texture2DLodEXT(luminanceBuffer1,vUv,MIP_LEVEL_1X1).r;\n#else\nfloat l1=textureLod(luminanceBuffer1,vUv,MIP_LEVEL_1X1).r;\n#endif\nl0=max(minLuminance,l0);l1=max(minLuminance,l1);float adaptedLum=l0+(l1-l0)*(1.0-exp(-deltaTime*tau));gl_FragColor=(adaptedLum==1.0)? vec4(1.0): packFloatToRGBA(adaptedLum);}",vertexShader:r}),this.toneMapped=!1}setLuminanceBuffer0(e){this.uniforms.luminanceBuffer0.value=e}setLuminanceBuffer1(e){this.uniforms.luminanceBuffer1.value=e}setMipLevel1x1(e){this.defines.MIP_LEVEL_1X1=e.toFixed(1),this.needsUpdate=!0}setDeltaTime(e){this.uniforms.deltaTime.value=e}getMinLuminance(){return this.uniforms.minLuminance.value}setMinLuminance(e){this.uniforms.minLuminance.value=e}getAdaptationRate(){return this.uniforms.tau.value}setAdaptationRate(e){this.uniforms.tau.value=e}},a=class extends i.ShaderMaterial{constructor(e=new i.Vector2){super({name:"KawaseBlurMaterial",uniforms:{inputBuffer:new i.Uniform(null),texelSize:new i.Uniform(new i.Vector2),halfTexelSize:new i.Uniform(new i.Vector2),kernel:new i.Uniform(0),scale:new i.Uniform(1)},blending:i.NoBlending,depthWrite:!1,depthTest:!1,fragmentShader:"#include <common>\n#include <dithering_pars_fragment>\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\nvarying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec4 sum=texture2D(inputBuffer,vUv0);sum+=texture2D(inputBuffer,vUv1);sum+=texture2D(inputBuffer,vUv2);sum+=texture2D(inputBuffer,vUv3);gl_FragColor=sum*0.25;\n#include <encodings_fragment>\n#include <dithering_fragment>\n}",vertexShader:"uniform vec2 texelSize;uniform vec2 halfTexelSize;uniform float kernel;uniform float scale;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vec2 dUv=(texelSize*vec2(kernel)+halfTexelSize)*scale;vUv0=vec2(uv.x-dUv.x,uv.y+dUv.y);vUv1=vec2(uv.x+dUv.x,uv.y+dUv.y);vUv2=vec2(uv.x+dUv.x,uv.y-dUv.y);vUv3=vec2(uv.x-dUv.x,uv.y-dUv.y);gl_Position=vec4(position.xy,1.0,1.0);}"}),this.toneMapped=!1,this.setTexelSize(e.x,e.y)}setInputBuffer(e){this.uniforms.inputBuffer.value=e}getScale(){return this.uniforms.scale.value}setScale(e){this.uniforms.scale.value=e}getKernel(){return null}setKernel(e){this.uniforms.kernel.value=e}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t),this.uniforms.halfTexelSize.value.set(e,t).multiplyScalar(.5)}setSize(e,t){const n=this.uniforms;n.texelSize.value.set(1/e,1/t),n.halfTexelSize.value.copy(n.texelSize.value).multiplyScalar(.5)}},o=class extends i.ShaderMaterial{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new i.Uniform(null),opacity:new i.Uniform(1)},blending:i.NoBlending,depthWrite:!1,depthTest:!1,fragmentShader:"#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\nuniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;\n#include <encodings_fragment>\n}",vertexShader:r}),this.toneMapped=!1}setInputBuffer(e){this.uniforms.inputBuffer.value=e}getOpacity(e){return this.uniforms.opacity.value}setOpacity(e){this.uniforms.opacity.value=e}},l={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"},u=class extends i.ShaderMaterial{constructor(e,t,n,r,s=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:i.REVISION.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new i.Uniform(null),depthBuffer:new i.Uniform(null),resolution:new i.Uniform(new i.Vector2),texelSize:new i.Uniform(new i.Vector2),cameraNear:new i.Uniform(.3),cameraFar:new i.Uniform(1e3),aspect:new i.Uniform(1),time:new i.Uniform(0)},blending:i.NoBlending,depthWrite:!1,depthTest:!1,dithering:s}),this.toneMapped=!1,e&&this.setShaderParts(e),t&&this.setDefines(t),n&&this.setUniforms(n),this.adoptCameraSettings(r)}setInputBuffer(e){this.uniforms.inputBuffer.value=e}setDepthBuffer(e,t=i.BasicDepthPacking){this.uniforms.depthBuffer.value=e,this.defines.DEPTH_PACKING=t.toFixed(0),this.needsUpdate=!0}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setShaderParts(e){return this.fragmentShader="#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#define packFloatToRGBA(v) packDepthToRGBA(v)\n#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nuniform highp sampler2D depthBuffer;\n#else\nuniform mediump sampler2D depthBuffer;\n#endif\nuniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;\n#if THREE_REVISION >= 137\nvec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}\n#endif\nfloat readDepth(const in vec2 uv){\n#if DEPTH_PACKING == 3201\nreturn unpackRGBAToDepth(texture2D(depthBuffer,uv));\n#else\nreturn texture2D(depthBuffer,uv).r;\n#endif\n}float getViewZ(const in float depth){\n#ifdef PERSPECTIVE_CAMERA\nreturn perspectiveDepthToViewZ(depth,cameraNear,cameraFar);\n#else\nreturn orthographicDepthToViewZ(depth,cameraNear,cameraFar);\n#endif\n}FRAGMENT_HEADvoid main(){FRAGMENT_MAIN_UVvec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGEgl_FragColor=color0;\n#ifdef ENCODE_OUTPUT\n#include <encodings_fragment>\n#endif\n#include <dithering_fragment>\n}".replace(l.FRAGMENT_HEAD,e.get(l.FRAGMENT_HEAD)).replace(l.FRAGMENT_MAIN_UV,e.get(l.FRAGMENT_MAIN_UV)).replace(l.FRAGMENT_MAIN_IMAGE,e.get(l.FRAGMENT_MAIN_IMAGE)),this.vertexShader="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEADvoid main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORTgl_Position=vec4(position.xy,1.0,1.0);}".replace(l.VERTEX_HEAD,e.get(l.VERTEX_HEAD)).replace(l.VERTEX_MAIN_SUPPORT,e.get(l.VERTEX_MAIN_SUPPORT)),this.needsUpdate=!0,this}setDefines(e){for(const t of e.entries())this.defines[t[0]]=t[1];return this.needsUpdate=!0,this}setUniforms(e){for(const t of e.entries())this.uniforms[t[0]]=t[1];return this}setExtensions(e){this.extensions={};for(const t of e)this.extensions[t]=!0;return this}isOutputEncodingEnabled(e){return void 0!==this.defines.ENCODE_OUTPUT}setOutputEncodingEnabled(e){this.isOutputEncodingEnabled()!==e&&(e?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}setDeltaTime(e){this.uniforms.time.value+=e}adoptCameraSettings(e){e&&(this.uniforms.cameraNear.value=e.near,this.uniforms.cameraFar.value=e.far,e instanceof i.PerspectiveCamera?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(e,t){const n=this.uniforms;n.resolution.value.set(e,t),n.texelSize.value.set(1/e,1/t),n.aspect.value=e/t}static get Section(){return l}},c=class extends i.ShaderMaterial{constructor(e=!1,t=null){super({name:"LuminanceMaterial",uniforms:{inputBuffer:new i.Uniform(null),threshold:new i.Uniform(0),smoothing:new i.Uniform(1),range:new i.Uniform(null)},blending:i.NoBlending,depthWrite:!1,depthTest:!1,fragmentShader:"#include <common>\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\n#ifdef RANGE\nuniform vec2 range;\n#elif defined(THRESHOLD)\nuniform float threshold;uniform float smoothing;\n#endif\nvarying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);float l=linearToRelativeLuminance(texel.rgb);\n#ifdef RANGE\nfloat low=step(range.x,l);float high=step(l,range.y);l*=low*high;\n#elif defined(THRESHOLD)\nl=smoothstep(threshold,threshold+smoothing,l);\n#endif\n#ifdef COLOR\ngl_FragColor=vec4(texel.rgb*l,l);\n#else\ngl_FragColor=vec4(l);\n#endif\n}",vertexShader:r}),this.toneMapped=!1,this.setColorOutputEnabled(e),this.setLuminanceRange(t)}setInputBuffer(e){this.uniforms.inputBuffer.value=e}get threshold(){return this.getThreshold()}set threshold(e){this.setThreshold(e)}getThreshold(){return this.uniforms.threshold.value}setThreshold(e){this.getSmoothingFactor()>0||e>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.threshold.value=e}get smoothing(){return this.getSmoothingFactor()}set smoothing(e){this.setSmoothingFactor(e)}getSmoothingFactor(){return this.uniforms.smoothing.value}setSmoothingFactor(e){this.getThreshold()>0||e>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.smoothing.value=e}get useThreshold(){return this.isThresholdEnabled()}set useThreshold(e){this.setThresholdEnabled(e)}get colorOutput(){return this.isColorOutputEnabled()}set colorOutput(e){this.setColorOutputEnabled(e)}isColorOutputEnabled(e){return void 0!==this.defines.COLOR}setColorOutputEnabled(e){e?this.defines.COLOR="1":delete this.defines.COLOR,this.needsUpdate=!0}get useRange(){return this.isLuminanceRangeEnabled()}set useRange(e){this.setLuminanceRangeEnabled(e)}get luminanceRange(){return null!==this.getLuminanceRange()}set luminanceRange(e){}getLuminanceRange(){return this.uniforms.range.value}setLuminanceRange(e){null!==e?this.defines.RANGE="1":delete this.defines.RANGE,this.uniforms.range.value=e,this.needsUpdate=!0}},h=new i.Camera,d=null;var f=class{constructor(e="Pass",t=new i.Scene,n=h){this.name=e,this.renderer=null,this.scene=t,this.camera=n,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(e){if(this.rtt===e){const t=this.getFullscreenMaterial();null!==t&&(t.needsUpdate=!0),this.rtt=!e}}setRenderer(e){this.renderer=e}isEnabled(){return this.enabled}setEnabled(e){this.enabled=e}getFullscreenMaterial(){return null!==this.screen?this.screen.material:null}setFullscreenMaterial(e){let t=this.screen;null!==t?t.material=e:(t=new i.Mesh(function(){if(null===d){const e=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),t=new Float32Array([0,0,2,0,0,2]);void 0!==(d=new i.BufferGeometry).setAttribute?(d.setAttribute("position",new i.BufferAttribute(e,3)),d.setAttribute("uv",new i.BufferAttribute(t,2))):(d.addAttribute("position",new i.BufferAttribute(e,3)),d.addAttribute("uv",new i.BufferAttribute(t,2)))}return d}(),e),t.frustumCulled=!1,null===this.scene&&(this.scene=new i.Scene),this.scene.add(t),this.screen=t)}getDepthTexture(){return null}setDepthTexture(e,t=0){}render(e,t,n,i,r){throw new Error("Render method not implemented!")}setSize(e,t){}initialize(e,t,n){}dispose(){const e=this.getFullscreenMaterial();null!==e&&e.dispose();for(const t of Object.keys(this)){const e=this[t];if(null!==e&&"function"===typeof e.dispose){if(e instanceof i.Scene)continue;this[t].dispose()}}}},p=class extends f{constructor(e,t=!0){super("CopyPass"),this.setFullscreenMaterial(new o),this.needsSwap=!1,this.renderTarget=e,void 0===e&&(this.renderTarget=new i.WebGLRenderTarget(1,1,{minFilter:i.LinearFilter,magFilter:i.LinearFilter,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.resize=t}get texture(){return this.getTexture()}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(e){this.resize=e}render(e,t,n,i,r){this.getFullscreenMaterial().setInputBuffer(t.texture),e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){this.resize&&this.renderTarget.setSize(e,t)}initialize(e,t,n){void 0!==n&&(this.renderTarget.texture.type=n,n!==i.UnsignedByteType&&(this.getFullscreenMaterial().defines.FRAMEBUFFER_PRECISION_HIGH="1"))}},g=class extends f{constructor(e,{minLuminance:t=.01,adaptationRate:n=1}={}){super("AdaptiveLuminancePass"),this.setFullscreenMaterial(new s),this.needsSwap=!1,this.renderTargetPrevious=new i.WebGLRenderTarget(1,1,{minFilter:i.NearestFilter,magFilter:i.NearestFilter,stencilBuffer:!1,depthBuffer:!1}),this.renderTargetPrevious.texture.name="Luminance.Previous";const r=this.getFullscreenMaterial();r.setLuminanceBuffer0(this.renderTargetPrevious.texture),r.setLuminanceBuffer1(e),r.setMinLuminance(t),r.setAdaptationRate(n),this.renderTargetAdapted=this.renderTargetPrevious.clone(),this.renderTargetAdapted.texture.name="Luminance.Adapted",this.copyPass=new p(this.renderTargetPrevious,!1)}get texture(){return this.getTexture()}getTexture(){return this.renderTargetAdapted.texture}set mipLevel1x1(e){this.getFullscreenMaterial().setMipLevel1x1(e)}get adaptationRate(){return this.getFullscreenMaterial().getAdaptationRate()}set adaptationRate(e){this.getFullscreenMaterial().setAdaptationRate(e)}render(e,t,n,i,r){this.getFullscreenMaterial().setDeltaTime(i),e.setRenderTarget(this.renderToScreen?null:this.renderTargetAdapted),e.render(this.scene,this.camera),this.copyPass.render(e,this.renderTargetAdapted)}},m=class extends f{constructor(){super("ClearMaskPass",null,null),this.needsSwap=!1}render(e,t,n,i,r){const s=e.state.buffers.stencil;s.setLocked(!1),s.setTest(!1)}},v=new i.Color,y=class extends f{constructor(e=!0,t=!0,n=!1){super("ClearPass",null,null),this.needsSwap=!1,this.color=e,this.depth=t,this.stencil=n,this.overrideClearColor=null,this.overrideClearAlpha=-1}setClearFlags(e,t,n){this.color=e,this.depth=t,this.stencil=n}getOverrideClearColor(){return this.overrideClearColor}setOverrideClearColor(e){this.overrideClearColor=e}getOverrideClearAlpha(){return this.overrideClearAlpha}setOverrideClearAlpha(e){this.overrideClearAlpha=e}render(e,t,n,i,r){const s=this.overrideClearColor,a=this.overrideClearAlpha,o=e.getClearAlpha(),l=null!==s,u=a>=0;l?(v.copy(e.getClearColor(v)),e.setClearColor(s,u?a:o)):u&&e.setClearAlpha(a),e.setRenderTarget(this.renderToScreen?null:t),e.clear(this.color,this.depth,this.stencil),l?e.setClearColor(v,o):u&&e.setClearAlpha(o)}},T=-1,E=class extends i.EventDispatcher{constructor(e,t=-1,n=-1,r=1){super(),this.resizable=e,this.base=new i.Vector2(1,1),this.preferred=new i.Vector2(t,n),this.target=this.preferred,this.s=r}get scale(){return this.getScale()}set scale(e){this.setScale(e)}get width(){return this.getWidth()}set width(e){this.setPreferredWidth(e)}get height(){return this.getHeight()}set height(e){this.setPreferredHeight(e)}copy(e){this.base.set(e.getBaseWidth(),e.getBaseHeight()),this.preferred.set(e.getPreferredWidth(),e.getPreferredHeight()),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.base.width,this.base.height)}getWidth(){const{base:e,preferred:t,scale:n}=this;let i;return i=t.width!==T?t.width:t.height!==T?Math.round(t.height*(e.width/Math.max(e.height,1))):Math.round(e.width*n),i}getHeight(){const{base:e,preferred:t,scale:n}=this;let i;return i=t.height!==T?t.height:t.width!==T?Math.round(t.width/Math.max(e.width/Math.max(e.height,1),1)):Math.round(e.height*n),i}getScale(){return this.s}setScale(e){this.s!==e&&(this.s=e,this.preferred.setScalar(T),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.base.width,this.base.height))}getBaseWidth(){return this.base.width}setBaseWidth(e){this.base.width!==e&&(this.base.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.base.width,this.base.height))}getBaseHeight(){return this.base.height}setBaseHeight(e){this.base.height!==e&&(this.base.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.base.width,this.base.height))}setBaseSize(e,t){this.base.width===e&&this.base.height===t||(this.base.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.base.width,this.base.height))}getPreferredWidth(){return this.preferred.width}setPreferredWidth(e){this.preferred.width!==e&&(this.preferred.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.base.width,this.base.height))}getPreferredHeight(){return this.preferred.height}setPreferredHeight(e){this.preferred.height!==e&&(this.preferred.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.base.width,this.base.height))}setPreferredSize(e,t){this.preferred.width===e&&this.preferred.height===t||(this.preferred.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.base.width,this.base.height))}static get AUTO_SIZE(){return T}},x=!1,w=class{constructor(e=null){this.originalMaterials=new Map,this.material=null,this.materials=null,this.materialsBackSide=null,this.materialsDoubleSide=null,this.materialsFlatShaded=null,this.materialsFlatShadedBackSide=null,this.materialsFlatShadedDoubleSide=null,this.setMaterial(e),this.meshCount=0,this.replaceMaterial=e=>{if(e.isMesh){let t;if(e.material.flatShading)switch(e.material.side){case i.DoubleSide:t=this.materialsFlatShadedDoubleSide;break;case i.BackSide:t=this.materialsFlatShadedBackSide;break;default:t=this.materialsFlatShaded}else switch(e.material.side){case i.DoubleSide:t=this.materialsDoubleSide;break;case i.BackSide:t=this.materialsBackSide;break;default:t=this.materials}this.originalMaterials.set(e,e.material),e.isSkinnedMesh?e.material=t[2]:e.isInstancedMesh?e.material=t[1]:e.material=t[0],++this.meshCount}}}setMaterial(e){if(this.disposeMaterials(),this.material=e,null!==e){const t=this.materials=[e.clone(),e.clone(),e.clone()];for(const n of t)n.uniforms=Object.assign({},e.uniforms),n.side=i.FrontSide;t[2].skinning=!0,this.materialsBackSide=t.map((t=>{const n=t.clone();return n.uniforms=Object.assign({},e.uniforms),n.side=i.BackSide,n})),this.materialsDoubleSide=t.map((t=>{const n=t.clone();return n.uniforms=Object.assign({},e.uniforms),n.side=i.DoubleSide,n})),this.materialsFlatShaded=t.map((t=>{const n=t.clone();return n.uniforms=Object.assign({},e.uniforms),n.flatShading=!0,n})),this.materialsFlatShadedBackSide=t.map((t=>{const n=t.clone();return n.uniforms=Object.assign({},e.uniforms),n.flatShading=!0,n.side=i.BackSide,n})),this.materialsFlatShadedDoubleSide=t.map((t=>{const n=t.clone();return n.uniforms=Object.assign({},e.uniforms),n.flatShading=!0,n.side=i.DoubleSide,n}))}}render(e,t,n){const i=e.shadowMap.enabled;if(e.shadowMap.enabled=!1,x){const i=this.originalMaterials;this.meshCount=0,t.traverse(this.replaceMaterial),e.render(t,n);for(const e of i)e[0].material=e[1];this.meshCount!==i.size&&i.clear()}else{const i=t.overrideMaterial;t.overrideMaterial=this.material,e.render(t,n),t.overrideMaterial=i}e.shadowMap.enabled=i}disposeMaterials(){if(null!==this.material){const e=this.materials.concat(this.materialsBackSide).concat(this.materialsDoubleSide).concat(this.materialsFlatShaded).concat(this.materialsFlatShadedBackSide).concat(this.materialsFlatShadedDoubleSide);for(const t of e)t.dispose()}}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return x}static set workaroundEnabled(e){x=e}},A=class extends f{constructor(e,t,n=null){super("RenderPass",e,t),this.needsSwap=!1,this.clearPass=new y,this.overrideMaterialManager=null===n?null:new w(n),this.backgroundDisabled=!1,this.shadowMapDisabled=!1,this.selection=null}get renderToScreen(){return super.renderToScreen}set renderToScreen(e){super.renderToScreen=e,this.clearPass.renderToScreen=e}get overrideMaterial(){return this.getOverrideMaterial()}set overrideMaterial(e){this.setOverrideMaterial(e)}getOverrideMaterial(){const e=this.overrideMaterialManager;return null!==e?e.material:null}setOverrideMaterial(e){const t=this.overrideMaterialManager;null!==e?null!==t?t.setMaterial(e):this.overrideMaterialManager=new w(e):null!==t&&(t.dispose(),this.overrideMaterialManager=null)}get clear(){return this.clearPass.isEnabled()}set clear(e){this.clearPass.setEnabled(e)}getSelection(){return this.selection}setSelection(e){this.selection=e}isBackgroundDisabled(){return this.backgroundDisabled}setBackgroundDisabled(e){this.backgroundDisabled=e}isShadowMapDisabled(){return this.shadowMapDisabled}setShadowMapDisabled(e){this.shadowMapDisabled=e}getClearPass(){return this.clearPass}render(e,t,n,i,r){const s=this.scene,a=this.camera,o=this.selection,l=a.layers.mask,u=s.background,c=e.shadowMap.autoUpdate,h=this.renderToScreen?null:t;null!==o&&a.layers.set(o.getLayer()),this.shadowMapDisabled&&(e.shadowMap.autoUpdate=!1),(this.backgroundDisabled||null!==this.clearPass.overrideClearColor)&&(s.background=null),this.clearPass.isEnabled()&&this.clearPass.render(e,t),e.setRenderTarget(h),null!==this.overrideMaterialManager?this.overrideMaterialManager.render(e,s,a):e.render(s,a),a.layers.mask=l,s.background=u,e.shadowMap.autoUpdate=c}};new Float32Array([255/256/256**3,255/256/65536,255/256/256,255/256]);var S={SKIP:0,ADD:1,ALPHA:2,AVERAGE:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,EXCLUSION:8,LIGHTEN:9,MULTIPLY:10,DIVIDE:11,NEGATION:12,NORMAL:13,OVERLAY:14,REFLECT:15,SCREEN:16,SOFT_LIGHT:17,SUBTRACT:18},b=new Map([[S.SKIP,null],[S.ADD,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return min(x+y,1.0)*opacity+x*(1.0-opacity);}"],[S.ALPHA,"vec3 blend(const in vec3 x,const in vec3 y,const in float opacity){return y*opacity+x*(1.0-opacity);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){float a=min(y.a,opacity);return vec4(blend(x.rgb,y.rgb,a),max(x.a,a));}"],[S.AVERAGE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(x+y)*0.5*opacity+x*(1.0-opacity);}"],[S.COLOR_BURN,"float blend(const in float x,const in float y){return(y==0.0)? y : max(1.0-(1.0-x)/y,0.0);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[S.COLOR_DODGE,"float blend(const in float x,const in float y){return(y==1.0)? y : min(x/(1.0-y),1.0);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[S.DARKEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return min(x,y)*opacity+x*(1.0-opacity);}"],[S.DIFFERENCE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return abs(x-y)*opacity+x*(1.0-opacity);}"],[S.EXCLUSION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(x+y-2.0*x*y)*opacity+x*(1.0-opacity);}"],[S.LIGHTEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return max(x,y)*opacity+x*(1.0-opacity);}"],[S.MULTIPLY,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return x*y*opacity+x*(1.0-opacity);}"],[S.DIVIDE,"float blend(const in float x,const in float y){return(y>0.0)? min(x/y,1.0): 1.0;}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[S.NEGATION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(1.0-abs(1.0-x-y))*opacity+x*(1.0-opacity);}"],[S.NORMAL,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y*opacity+x*(1.0-opacity);}"],[S.OVERLAY,"float blend(const in float x,const in float y){return(x<0.5)?(2.0*x*y):(1.0-2.0*(1.0-x)*(1.0-y));}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[S.REFLECT,"float blend(const in float x,const in float y){return(y==1.0)? y : min(x*x/(1.0-y),1.0);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[S.SCREEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(1.0-(1.0-x)*(1.0-y))*opacity+x*(1.0-opacity);}"],[S.SOFT_LIGHT,"float blend(const in float x,const in float y){return(y<0.5)?(2.0*x*y+x*x*(1.0-2.0*y)):(sqrt(x)*(2.0*y-1.0)+2.0*x*(1.0-y));}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[S.SUBTRACT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return max(x+y-1.0,0.0)*opacity+x*(1.0-opacity);}"]]),M=class extends i.EventDispatcher{constructor(e,t=1){super(),this.blendFunction=e,this.opacity=new i.Uniform(t)}getOpacity(){return this.opacity.value}setOpacity(e){this.opacity.value=e}getBlendFunction(){return this.blendFunction}setBlendFunction(e){this.blendFunction=e,this.dispatchEvent({type:"change"})}getShaderCode(){return b.get(this.blendFunction)}},R=0,F=1,U=2,C=class extends i.EventDispatcher{constructor(e,t,{attributes:n=R,blendFunction:i=S.SCREEN,defines:r=new Map,uniforms:s=new Map,extensions:a=null,vertexShader:o=null}={}){super(),this.name=e,this.renderer=null,this.attributes=n,this.fragmentShader=t,this.vertexShader=o,this.defines=r,this.uniforms=s,this.extensions=a,this.blendMode=new M(i),this.blendMode.addEventListener("change",(e=>this.setChanged()))}getName(){return this.name}setRenderer(e){this.renderer=e}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(e){this.attributes=e,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(e){this.fragmentShader=e,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(e){this.vertexShader=e,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(e,t=i.BasicDepthPacking){}update(e,t,n){}setSize(e,t){}initialize(e,t,n){}dispose(){for(const e of Object.keys(this)){const t=this[e];if(null!==t&&"function"===typeof t.dispose){if(t instanceof i.Scene)continue;this[e].dispose()}}}};function B(e,t,n){for(const i of t){const t="$1"+e+i.charAt(0).toUpperCase()+i.slice(1),r=new RegExp("([^\\.])(\\b"+i+"\\b)","g");for(const e of n.entries())null!==e[1]&&n.set(e[0],e[1].replace(r,t))}}function D(e,t,n,i,r,s,a){const o=new Map([["fragment",t.getFragmentShader()],["vertex",t.getVertexShader()]]),l=void 0!==o.get("fragment")&&/mainImage/.test(o.get("fragment")),c=void 0!==o.get("fragment")&&/mainUv/.test(o.get("fragment"));let h=[],d=[],f=!1,p=!1;if(void 0===o.get("fragment"))console.error("Missing fragment shader",t);else if(c&&0!==(a&U))console.error("Effects that transform UV coordinates are incompatible with convolution effects",t);else if(l||c){const g=/(?:\w+\s+(\w+)\([\w\s,]*\)\s*{[^}]+})/g,m=u.Section;if(c){const t="\t"+e+"MainUv(UV);\n";n.set(m.FRAGMENT_MAIN_UV,n.get(m.FRAGMENT_MAIN_UV)+t),f=!0}if(null!==o.get("vertex")&&/mainSupport/.test(o.get("vertex"))){let t="\t"+e+"MainSupport(";t+=/mainSupport *\([\w\s]*?uv\s*?\)/.test(o.get("vertex"))?"vUv);\n":");\n",n.set(m.VERTEX_MAIN_SUPPORT,n.get(m.VERTEX_MAIN_SUPPORT)+t),h=h.concat([...o.get("vertex").matchAll(/(?:varying\s+\w+\s+(\w*))/g)].map((e=>e[1]))),d=d.concat(h).concat([...o.get("vertex").matchAll(g)].map((e=>e[1])))}d=d.concat([...o.get("fragment").matchAll(g)].map((e=>e[1]))),d=d.concat([...t.getDefines().keys()].map((e=>e.replace(/\([\w\s,]*\)/g,"")))),d=d.concat([...t.getUniforms().keys()]),t.getUniforms().forEach(((t,n)=>s.set(e+n.charAt(0).toUpperCase()+n.slice(1),t))),t.getDefines().forEach(((t,n)=>r.set(e+n.charAt(0).toUpperCase()+n.slice(1),t))),B(e,d,r),B(e,d,o);const v=t.getBlendMode();if(i.set(v.blendFunction,v),l){const t=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;let i=e+"MainImage(color0, UV, ";0!==(a&F)&&t.test(o.get("fragment"))&&(i+="depth, ",p=!0),i+="color1);\n\t";const r=e+"BlendOpacity";s.set(r,v.opacity),i+="color0 = blend"+v.getBlendFunction()+"(color0, color1, "+r+");\n\n\t",n.set(m.FRAGMENT_MAIN_IMAGE,n.get(m.FRAGMENT_MAIN_IMAGE)+i),i="uniform float "+r+";\n\n",n.set(m.FRAGMENT_HEAD,n.get(m.FRAGMENT_HEAD)+i)}n.set(m.FRAGMENT_HEAD,n.get(m.FRAGMENT_HEAD)+o.get("fragment")+"\n"),null!==o.get("vertex")&&n.set(m.VERTEX_HEAD,n.get(m.VERTEX_HEAD)+o.get("vertex")+"\n")}else console.error("The fragment shader contains neither a mainImage nor a mainUv function",t);return{varyings:h,transformedUv:f,readDepth:p}}var P=class extends f{constructor(e,...t){super("EffectPass"),this.setFullscreenMaterial(new u(null,null,null,e)),this.effects=t.sort(((e,t)=>t.attributes-e.attributes)),this.skipRendering=!1,this.uniformCount=0,this.varyingCount=0,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY}get encodeOutput(){return this.getFullscreenMaterial().isOutputEncodingEnabled()}set encodeOutput(e){this.getFullscreenMaterial().setOutputEncodingEnabled(e)}get dithering(){return this.getFullscreenMaterial().dithering}set dithering(e){const t=this.getFullscreenMaterial();t.dithering=e,t.needsUpdate=!0}verifyResources(){const e=this.renderer.capabilities;let t=Math.min(e.maxFragmentUniforms,e.maxVertexUniforms);this.uniformCount>t&&console.warn("The current rendering context doesn't support more than "+t+" uniforms, but "+this.uniformCount+" were defined"),t=e.maxVaryings,this.varyingCount>t&&console.warn("The current rendering context doesn't support more than "+t+" varyings, but "+this.varyingCount+" were defined")}updateMaterial(){const e=u.Section,t=new Map([[e.FRAGMENT_HEAD,""],[e.FRAGMENT_MAIN_UV,""],[e.FRAGMENT_MAIN_IMAGE,""],[e.VERTEX_HEAD,""],[e.VERTEX_MAIN_SUPPORT,""]]),n=new Map,i=new Map,r=new Map,s=new Set;let a=0,o=0,l=0,c=!1,h=!1;for(const u of this.effects)if(u.getBlendMode().getBlendFunction()===S.SKIP)l|=u.getAttributes()&F;else if(0!==(l&u.getAttributes()&U))console.error("Convolution effects cannot be merged",u);else{l|=u.getAttributes();const e=D("e"+a++,u,t,n,i,r,l);if(o+=e.varyings.length,c=c||e.transformedUv,h=h||e.readDepth,null!==u.getExtensions())for(const t of u.getExtensions())s.add(t)}const d=/\bblend\b/g;for(const u of n.values()){const n=u.getShaderCode().replace(d,"blend"+u.getBlendFunction());t.set(e.FRAGMENT_HEAD,t.get(e.FRAGMENT_HEAD)+n+"\n")}if(0!==(l&F)){if(h){const n="float depth = readDepth(UV);\n\n\t";t.set(e.FRAGMENT_MAIN_IMAGE,n+t.get(e.FRAGMENT_MAIN_IMAGE))}this.needsDepthTexture=null===this.getDepthTexture()}else this.needsDepthTexture=!1;if(c){const n="vec2 transformedUv = vUv;\n";t.set(e.FRAGMENT_MAIN_UV,n+t.get(e.FRAGMENT_MAIN_UV)),i.set("UV","transformedUv")}else i.set("UV","vUv");t.forEach(((e,t,n)=>n.set(t,e.trim().replace(/^#/,"\n#")))),this.uniformCount=r.size,this.varyingCount=o,this.skipRendering=0===a,this.needsSwap=!this.skipRendering,this.getFullscreenMaterial().setShaderParts(t).setExtensions(s).setUniforms(r).setDefines(i)}recompile(e){this.updateMaterial(),this.verifyResources()}setRenderer(e){super.setRenderer(e);for(const t of this.effects)t.setRenderer(e)}getDepthTexture(){return this.getFullscreenMaterial().uniforms.depthBuffer.value}setDepthTexture(e,t=i.BasicDepthPacking){this.getFullscreenMaterial().setDepthBuffer(e,t);for(const n of this.effects)n.setDepthTexture(e,t)}render(e,t,n,i,r){for(const s of this.effects)s.update(e,t,i);if(!this.skipRendering||this.renderToScreen){const r=this.getFullscreenMaterial();r.setInputBuffer(t.texture),r.setDeltaTime(i),e.setRenderTarget(this.renderToScreen?null:n),e.render(this.scene,this.camera)}}setSize(e,t){this.getFullscreenMaterial().setSize(e,t);for(const n of this.effects)n.setSize(e,t)}initialize(e,t,n){for(const i of this.effects)i.initialize(e,t,n),i.addEventListener("change",(e=>this.handleEvent(e)));this.updateMaterial(),this.verifyResources(e),void 0!==n&&n!==i.UnsignedByteType&&(this.getFullscreenMaterial().defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){super.dispose();for(const e of this.effects)e.dispose()}handleEvent(e){if("change"===e.type)this.recompile()}},I=[new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10])],L=class extends f{constructor({resolutionScale:e=.5,width:t=E.AUTO_SIZE,height:n=E.AUTO_SIZE,kernelSize:r=k.LARGE}={}){super("KawaseBlurPass"),this.renderTargetA=new i.WebGLRenderTarget(1,1,{minFilter:i.LinearFilter,magFilter:i.LinearFilter,stencilBuffer:!1,depthBuffer:!1}),this.renderTargetA.texture.name="Blur.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="Blur.Target.B",this.resolution=new E(this,t,n,e),this.resolution.addEventListener("change",(e=>this.setSize(this.resolution.getBaseWidth(),this.resolution.getBaseHeight()))),this.blurMaterial=new a,this.ditheredBlurMaterial=new a,this.ditheredBlurMaterial.dithering=!0,this.dithering=!1,this.kernelSize=r}getResolution(){return this.resolution}get width(){return this.resolution.getWidth()}set width(e){this.resolution.setPreferredWidth(e)}get height(){return this.resolution.getHeight()}set height(e){this.resolution.setPreferredHeight(e)}get scale(){return this.getScale()}set scale(e){this.setScale(e)}getScale(){return this.blurMaterial.getScale()}setScale(e){this.blurMaterial.setScale(e),this.ditheredBlurMaterial.setScale(e)}getKernelSize(){return this.kernelSize}setKernelSize(e){this.kernelSize=e}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}render(e,t,n,i,r){const s=this.scene,a=this.camera,o=this.renderTargetA,l=this.renderTargetB,u=I[this.kernelSize];let c,h,d=this.blurMaterial,f=t;for(this.setFullscreenMaterial(d),c=0,h=u.length-1;c<h;++c){const t=0===(1&c)?o:l;d.setKernel(u[c]),d.setInputBuffer(f.texture),e.setRenderTarget(t),e.render(s,a),f=t}this.dithering&&(d=this.ditheredBlurMaterial,this.setFullscreenMaterial(d)),d.setKernel(u[c]),d.setInputBuffer(f.texture),e.setRenderTarget(this.renderToScreen?null:n),e.render(s,a)}setSize(e,t){const n=this.resolution;n.setBaseSize(e,t);const i=n.getWidth(),r=n.getHeight();this.renderTargetA.setSize(i,r),this.renderTargetB.setSize(i,r),this.blurMaterial.setSize(i,r),this.ditheredBlurMaterial.setSize(i,r)}initialize(e,t,n){void 0!==n&&(this.renderTargetA.texture.type=n,this.renderTargetB.texture.type=n,n!==i.UnsignedByteType&&(this.blurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.ditheredBlurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1"))}static get AUTO_SIZE(){return E.AUTO_SIZE}},_=class extends f{constructor({width:e=E.AUTO_SIZE,height:t=E.AUTO_SIZE,renderTarget:n,luminanceRange:r,colorOutput:s}={}){super("LuminancePass"),this.setFullscreenMaterial(new c(s,r)),this.needsSwap=!1,this.renderTarget=n,void 0===this.renderTarget&&(this.renderTarget=new i.WebGLRenderTarget(1,1,{minFilter:i.LinearFilter,magFilter:i.LinearFilter,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="LuminancePass.Target",this.renderTarget.texture.generateMipmaps=!1),this.resolution=new E(this,e,t),this.resolution.addEventListener("change",(e=>this.setSize(this.resolution.getBaseWidth(),this.resolution.getBaseHeight())))}get texture(){return this.getTexture()}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}render(e,t,n,i,r){this.getFullscreenMaterial().setInputBuffer(t.texture),e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){const n=this.resolution;n.setBaseSize(e,t),this.renderTarget.setSize(n.getWidth(),n.getHeight())}initialize(e,t,n){void 0!==n&&n!==i.UnsignedByteType&&(this.getFullscreenMaterial().defines.FRAMEBUFFER_PRECISION_HIGH="1")}},N=class extends f{constructor(e,t){super("MaskPass",e,t),this.needsSwap=!1,this.clearPass=new y(!1,!1,!0),this.inverse=!1}get clear(){return this.clearPass.isEnabled()}set clear(e){this.clearPass.enabled=e}getClearPass(){return this.clearPass}isInverted(){return this.inverse}setInverted(e){this.inverse=e}render(e,t,n,i,r){const s=e.getContext(),a=e.state.buffers,o=this.scene,l=this.camera,u=this.clearPass,c=this.inverse?0:1,h=1-c;a.color.setMask(!1),a.depth.setMask(!1),a.color.setLocked(!0),a.depth.setLocked(!0),a.stencil.setTest(!0),a.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),a.stencil.setFunc(s.ALWAYS,c,4294967295),a.stencil.setClear(h),a.stencil.setLocked(!0),this.clear&&(this.renderToScreen?u.render(e,null):(u.render(e,t),u.render(e,n))),this.renderToScreen?(e.setRenderTarget(null),e.render(o,l)):(e.setRenderTarget(t),e.render(o,l),e.setRenderTarget(n),e.render(o,l)),a.color.setLocked(!1),a.depth.setLocked(!1),a.stencil.setLocked(!1),a.stencil.setFunc(s.EQUAL,1,4294967295),a.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),a.stencil.setLocked(!0)}},z=class extends f{constructor(e,t,{resolutionScale:n=1,width:r=E.AUTO_SIZE,height:s=E.AUTO_SIZE,renderTarget:a}={}){super("NormalPass"),this.needsSwap=!1,this.renderPass=new A(e,t,new i.MeshNormalMaterial);const o=this.renderPass;o.setBackgroundDisabled(!0),o.setShadowMapDisabled(!0);const l=o.getClearPass();l.setOverrideClearColor(new i.Color(7829503)),l.setOverrideClearAlpha(1),this.renderTarget=a,void 0===this.renderTarget&&(this.renderTarget=new i.WebGLRenderTarget(1,1,{minFilter:i.NearestFilter,magFilter:i.NearestFilter,stencilBuffer:!1}),this.renderTarget.texture.name="NormalPass.Target"),this.resolution=new E(this,r,s,n),this.resolution.addEventListener("change",(e=>this.setSize(this.resolution.getBaseWidth(),this.resolution.getBaseHeight())))}get texture(){return this.getTexture()}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.getScale()}setResolutionScale(e){this.resolution.setScale(e)}render(e,t,n,i,r){const s=this.renderToScreen?null:this.renderTarget;this.renderPass.render(e,s,s)}setSize(e,t){const n=this.resolution;n.setBaseSize(e,t),this.renderTarget.setSize(n.getWidth(),n.getHeight())}},O=.001,G=class{constructor(e=null,{depthBuffer:t=!0,stencilBuffer:n=!1,multisampling:i=0,frameBufferType:r}={}){this.renderer=null,this.inputBuffer=this.createBuffer(t,n,r,i),this.outputBuffer=this.inputBuffer.clone(),this.copyPass=new p,this.depthTexture=null,this.passes=[],this.timer=new class{constructor(){this.previousTime=0,this.currentTime=0,this.delta=0,this.fixedDelta=1e3/60,this.elapsed=0,this.timescale=1,this.fixedDeltaEnabled=!1}setFixedDeltaEnabled(e){return this.fixedDeltaEnabled=e,this}setAutoResetEnabled(e){return"undefined"!==typeof document&&void 0!==document.hidden&&(e?document.addEventListener("visibilitychange",this):document.removeEventListener("visibilitychange",this)),this}getDelta(){return this.delta*O}getFixedDelta(){return this.fixedDelta*O}setFixedDelta(e){return this.fixedDelta=1e3*e,this}getElapsed(){return this.elapsed*O}getTimescale(){return this.timescale}setTimescale(e){return this.timescale=e,this}update(e){return this.fixedDeltaEnabled?this.delta=this.fixedDelta:(this.previousTime=this.currentTime,this.currentTime=void 0!==e?e:performance.now(),this.delta=this.currentTime-this.previousTime),this.delta*=this.timescale,this.elapsed+=this.delta,this}reset(){return this.delta=0,this.elapsed=0,this.currentTime=performance.now(),this}handleEvent(e){document.hidden||(this.currentTime=performance.now())}dispose(){"undefined"!==typeof document&&document.removeEventListener("visibilitychange",this)}},this.autoRenderToScreen=!0,this.setRenderer(e)}get multisampling(){return this.inputBuffer.samples||0}set multisampling(e){const t=this.inputBuffer,n=this.multisampling;n>0&&e>0?(this.inputBuffer.samples=e,this.outputBuffer.samples=e,this.inputBuffer.dispose(),this.outputBuffer.dispose()):n!==e&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(t.depthBuffer,t.stencilBuffer,t.texture.type,e),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getTimer(){return this.timer}getRenderer(){return this.renderer}setRenderer(e){if(this.renderer=e,null!==e){const t=e.getSize(new i.Vector2),n=e.getContext().getContextAttributes().alpha,r=this.inputBuffer.texture.type;e.autoClear=!1,this.setSize(t.width,t.height);for(const i of this.passes)i.setRenderer(e),i.initialize(e,n,r)}}replaceRenderer(e,t=!0){const n=this.renderer,i=n.domElement.parentNode;return this.setRenderer(e),t&&null!==i&&(i.removeChild(n.domElement),i.appendChild(e.domElement)),n}createDepthTexture(){const e=this.depthTexture=new i.DepthTexture;return this.inputBuffer.depthTexture=e,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(e.format=i.DepthStencilFormat,e.type=i.UnsignedInt248Type):e.type=i.UnsignedIntType,e}deleteDepthTexture(){if(null!==this.depthTexture){this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose();for(const e of this.passes)e.setDepthTexture(null)}}createBuffer(e,t,n,r){const s=null===this.renderer?new i.Vector2:this.renderer.getDrawingBufferSize(new i.Vector2),a={minFilter:i.LinearFilter,magFilter:i.LinearFilter,stencilBuffer:t,depthBuffer:e,type:n};let o;return r>0?(o=Number(i.REVISION.replace(/\D+/g,""))<138?new i.WebGLMultisampleRenderTarget(s.width,s.height,a):new i.WebGLRenderTarget(s.width,s.height,a),o.ignoreDepthForMultisampleCopy=!1,o.samples=r):o=new i.WebGLRenderTarget(s.width,s.height,a),o.texture.name="EffectComposer.Buffer",o.texture.generateMipmaps=!1,o}addPass(e,t){const n=this.passes,r=this.renderer,s=r.getDrawingBufferSize(new i.Vector2),a=r.getContext().getContextAttributes().alpha,o=this.inputBuffer.texture.type;if(e.setRenderer(r),e.setSize(s.width,s.height),e.initialize(r,a,o),this.autoRenderToScreen&&(n.length>0&&(n[n.length-1].renderToScreen=!1),e.renderToScreen&&(this.autoRenderToScreen=!1)),void 0!==t?n.splice(t,0,e):n.push(e),this.autoRenderToScreen&&(n[n.length-1].renderToScreen=!0),e.needsDepthTexture||null!==this.depthTexture)if(null===this.depthTexture){const t=this.createDepthTexture();for(e of n)e.setDepthTexture(t)}else e.setDepthTexture(this.depthTexture)}removePass(e){const t=this.passes,n=t.indexOf(e);if(-1!==n&&t.splice(n,1).length>0){if(null!==this.depthTexture){const n=(e,t)=>e||t.needsDepthTexture;t.reduce(n,!1)||(e.getDepthTexture()===this.depthTexture&&e.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&n===t.length&&(e.renderToScreen=!1,t.length>0&&(t[t.length-1].renderToScreen=!0))}}removeAllPasses(){const e=this.passes;this.deleteDepthTexture(),e.length>0&&(this.autoRenderToScreen&&(e[e.length-1].renderToScreen=!1),this.passes=[])}render(e){const t=this.renderer,n=this.copyPass;let i,r,s,a=this.inputBuffer,o=this.outputBuffer,l=!1;void 0===e&&(e=this.timer.update().getDelta());for(const u of this.passes)u.isEnabled()&&(u.render(t,a,o,e,l),u.needsSwap&&(l&&(n.renderToScreen=u.renderToScreen,i=t.getContext(),r=t.state.buffers.stencil,r.setFunc(i.NOTEQUAL,1,4294967295),n.render(t,a,o,e,l),r.setFunc(i.EQUAL,1,4294967295)),s=a,a=o,o=s),u instanceof N?l=!0:u instanceof m&&(l=!1))}setSize(e,t,n){const r=this.renderer;if(void 0===e||void 0===t){const n=r.getSize(new i.Vector2);e=n.width,t=n.height}r.setSize(e,t,n);const s=r.getDrawingBufferSize(new i.Vector2);this.inputBuffer.setSize(s.width,s.height),this.outputBuffer.setSize(s.width,s.height);for(const i of this.passes)i.setSize(s.width,s.height)}reset(){this.dispose(),this.autoRenderToScreen=!0}dispose(){for(const e of this.passes)e.dispose();this.passes=[],null!==this.inputBuffer&&this.inputBuffer.dispose(),null!==this.outputBuffer&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose(),this.timer.dispose()}},k={VERY_SMALL:0,SMALL:1,MEDIUM:2,LARGE:3,VERY_LARGE:4,HUGE:5},H=(Set,class extends C{constructor({blendFunction:e=S.SCREEN,luminanceThreshold:t=.9,luminanceSmoothing:n=.025,resolutionScale:r=.5,intensity:s=1,width:a=E.AUTO_SIZE,height:o=E.AUTO_SIZE,kernelSize:l=k.LARGE}={}){super("BloomEffect","#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D map;\n#else\nuniform lowp sampler2D map;\n#endif\nuniform float intensity;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){outputColor=clamp(texture2D(map,uv)*intensity,0.0,1.0);}",{blendFunction:e,uniforms:new Map([["map",new i.Uniform(null)],["intensity",new i.Uniform(s)]])}),this.renderTarget=new i.WebGLRenderTarget(1,1,{minFilter:i.LinearFilter,magFilter:i.LinearFilter,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="Bloom.Target",this.renderTarget.texture.generateMipmaps=!1,this.uniforms.get("map").value=this.renderTarget.texture,this.luminancePass=new _({renderTarget:this.renderTarget,colorOutput:!0}),this.luminanceMaterial.setThreshold(t),this.luminanceMaterial.setSmoothingFactor(n),this.blurPass=new L({resolutionScale:r,width:a,height:o,kernelSize:l});const u=this.blurPass.getResolution();u.addEventListener("change",(e=>this.setSize(u.getBaseWidth(),u.getBaseHeight())))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}get resolution(){return this.getResolution()}getResolution(){return this.blurPass.getResolution()}getBlurPass(){return this.blurPass}getLuminancePass(){return this.luminancePass}get luminanceMaterial(){return this.luminancePass.getFullscreenMaterial()}getLuminanceMaterial(){return this.luminancePass.getFullscreenMaterial()}get width(){return this.getResolution().getWidth()}set width(e){this.getResolution().setPreferredWidth(e)}get height(){return this.getResolution().getHeight()}set height(e){this.getResolution().setPreferredHeight(e)}get dithering(){return this.blurPass.dithering}set dithering(e){this.blurPass.dithering=e}get kernelSize(){return this.blurPass.getKernelSize()}set kernelSize(e){this.blurPass.setKernelSize(e)}get distinction(){return console.warn(this.name,"distinction was removed, use getLuminanceMaterial().getThreshold() and getLuminanceMaterial().getSmoothingFactor() instead."),1}set distinction(e){console.warn(this.name,"distinction was removed, use getLuminanceMaterial().setThreshold() and getLuminanceMaterial().setSmoothingFactor() instead.")}get intensity(){return this.getIntensity()}set intensity(e){this.setIntensity(e)}getIntensity(){return this.uniforms.get("intensity").value}setIntensity(e){this.uniforms.get("intensity").value=e}getResolutionScale(){return this.getResolution().getScale()}setResolutionScale(e){this.getResolution().setScale(e)}update(e,t,n){const i=this.renderTarget;this.luminancePass.isEnabled()?(this.luminancePass.render(e,t,i),this.blurPass.render(e,i,i)):this.blurPass.render(e,t,i)}setSize(e,t){const n=this.getResolution();n.setBaseSize(e,t),this.renderTarget.setSize(n.getWidth(),n.getHeight()),this.luminancePass.getResolution().copy(n)}initialize(e,t,n){this.blurPass.initialize(e,t,n),void 0!==n&&(this.renderTarget.texture.type=n)}}),V=class extends C{constructor({blendFunction:e=S.NORMAL,brightness:t=0,contrast:n=0}={}){super("BrightnessContrastEffect","uniform float brightness;uniform float contrast;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=inputColor.rgb+vec3(brightness-0.5);if(contrast>0.0){color/=vec3(1.0-contrast);}else{color*=vec3(1.0+contrast);}outputColor=vec4(min(color+vec3(0.5),1.0),inputColor.a);}",{blendFunction:e,uniforms:new Map([["brightness",new i.Uniform(t)],["contrast",new i.Uniform(n)]])})}getBrightness(e){return this.uniforms.get("brightness").value}setBrightness(e){this.uniforms.get("brightness").value=e}getContrast(e){return this.uniforms.get("contrast").value}setContrast(e){this.uniforms.get("contrast").value=e}},W=class extends C{constructor({blendFunction:e=S.NORMAL,bits:t=16}={}){super("ColorDepthEffect","uniform float factor;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){outputColor=vec4(floor(inputColor.rgb*factor+0.5)/factor,inputColor.a);}",{blendFunction:e,uniforms:new Map([["factor",new i.Uniform(1)]])}),this.bits=0,this.setBitDepth(t)}getBitDepth(){return this.bits}setBitDepth(e){this.bits=e,this.uniforms.get("factor").value=Math.pow(2,e/3)}},K=class extends C{constructor({blendFunction:e=S.NORMAL,inverted:t=!1}={}){super("DepthEffect","void mainImage(const in vec4 inputColor,const in vec2 uv,const in float depth,out vec4 outputColor){\n#ifdef INVERTED\nvec3 color=vec3(1.0-depth);\n#else\nvec3 color=vec3(depth);\n#endif\noutputColor=vec4(color,inputColor.a);}",{blendFunction:e,attributes:F}),this.setInverted(t)}get inverted(){return this.isInverted}set inverted(e){this.setInverted(e)}isInverted(){return this.defines.has("INVERTED")}setInverted(e){this.inverted!==e&&(e?this.defines.set("INVERTED","1"):this.defines.delete("INVERTED"),this.setChanged())}},X=class extends C{constructor({blendFunction:e=S.NORMAL,angle:t=.5*Math.PI,scale:n=1}={}){super("DotScreenEffect","uniform vec2 angle;uniform float scale;float pattern(const in vec2 uv){vec2 point=scale*vec2(dot(angle.yx,vec2(uv.x,-uv.y)),dot(angle,uv));return(sin(point.x)*sin(point.y))*4.0;}void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=vec3(inputColor.rgb*10.0-5.0+pattern(uv*resolution));outputColor=vec4(color,inputColor.a);}",{blendFunction:e,uniforms:new Map([["angle",new i.Uniform(new i.Vector2)],["scale",new i.Uniform(n)]])}),this.setAngle(t)}getAngle(e){return Math.acos(this.uniforms.get("angle").value.y)}setAngle(e){this.uniforms.get("angle").value.set(Math.sin(e),Math.cos(e))}};new i.Vector3,new i.Matrix4;var Z=class extends C{constructor({blendFunction:e=S.NORMAL,hue:t=0,saturation:n=0}={}){super("HueSaturationEffect","uniform vec3 hue;uniform float saturation;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=vec3(dot(inputColor.rgb,hue.xyz),dot(inputColor.rgb,hue.zxy),dot(inputColor.rgb,hue.yzx));float average=(color.r+color.g+color.b)/3.0;vec3 diff=average-color;if(saturation>0.0){color+=diff*(1.0-1.0/(1.001-saturation));}else{color+=diff*-saturation;}outputColor=vec4(min(color,1.0),inputColor.a);}",{blendFunction:e,uniforms:new Map([["hue",new i.Uniform(new i.Vector3)],["saturation",new i.Uniform(n)]])}),this.setHue(t)}getSaturation(e){return this.uniforms.get("saturation").value}setSaturation(e){this.uniforms.get("saturation").value=e}getHue(e){const t=this.uniforms.get("hue").value;return Math.acos((3*t.x-1)/2)}setHue(e){const t=Math.sin(e),n=Math.cos(e);this.uniforms.get("hue").value.set((2*n+1)/3,(-Math.sqrt(3)*t-n+1)/3,(Math.sqrt(3)*t-n+1)/3)}};new i.Color;var q=class extends C{constructor({blendFunction:e=S.SCREEN,premultiply:t=!1}={}){super("NoiseEffect","void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 noise=vec3(rand(uv*time));\n#ifdef PREMULTIPLIED\noutputColor=vec4(min(inputColor.rgb*noise,vec3(1.0)),inputColor.a);\n#else\noutputColor=vec4(noise,inputColor.a);\n#endif\n}",{blendFunction:e}),this.setPremultiplied(t)}get premultiply(){return this.isPremultiplied()}set premultiply(e){this.setPremultiplied(e)}isPremultiplied(){return this.defines.has("PREMULTIPLIED")}setPremultiplied(e){this.isPremultiplied()!==e&&(e?this.defines.set("PREMULTIPLIED","1"):this.defines.delete("PREMULTIPLIED"),this.setChanged())}};var Y=class extends C{constructor({blendFunction:e=S.OVERLAY,density:t=1.25}={}){super("ScanlineEffect","uniform float count;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec2 sl=vec2(sin(uv.y*count),cos(uv.y*count));vec3 scanlines=vec3(sl.x,sl.y,sl.x);outputColor=vec4(scanlines,inputColor.a);}",{blendFunction:e,uniforms:new Map([["count",new i.Uniform(0)]])}),this.resolution=new i.Vector2,this.density=t}getDensity(){return this.density}setDensity(e){this.density=e,this.setSize(this.resolution.width,this.resolution.height)}setSize(e,t){this.resolution.set(e,t),this.uniforms.get("count").value=Math.round(t*this.density)}},j=.5*Math.PI,Q=new i.Vector3,$=new i.Vector3,J=class extends C{constructor(e,t=new i.Vector3,{speed:n=2,maxRadius:r=1,waveSize:s=.2,amplitude:a=.05}={}){super("ShockWaveEffect","uniform bool active;uniform vec2 center;uniform float waveSize;uniform float radius;uniform float maxRadius;uniform float amplitude;varying float vSize;void mainUv(inout vec2 uv){if(active){vec2 aspectCorrection=vec2(aspect,1.0);vec2 difference=uv*aspectCorrection-center*aspectCorrection;float distance=sqrt(dot(difference,difference))*vSize;if(distance>radius){if(distance<radius+waveSize){float angle=(distance-radius)*PI2/waveSize;float cosSin=(1.0-cos(angle))*0.5;float extent=maxRadius+waveSize;float decay=max(extent-distance*distance,0.0)/extent;uv-=((cosSin*amplitude*difference)/distance)*decay;}}}}",{vertexShader:"uniform float size;uniform float cameraDistance;varying float vSize;void mainSupport(){vSize=(0.1*cameraDistance)/size;}",uniforms:new Map([["active",new i.Uniform(!1)],["center",new i.Uniform(new i.Vector2(.5,.5))],["cameraDistance",new i.Uniform(1)],["size",new i.Uniform(1)],["radius",new i.Uniform(-s)],["maxRadius",new i.Uniform(r)],["waveSize",new i.Uniform(s)],["amplitude",new i.Uniform(a)]])}),this.camera=e,this.epicenter=t,this.screenPosition=this.uniforms.get("center").value,this.speed=n,this.time=0,this.active=!1}getPosition(){return this.epicenter}setPosition(e){this.epicenter=e}getSpeed(){return this.speed}setSpeed(e){this.speed=e}explode(){this.time=0,this.active=!0,this.uniforms.get("active").value=!0}update(e,t,n){const i=this.getPosition(),r=this.camera,s=this.uniforms,a=s.get("active");if(this.active){const e=s.get("waveSize").value;r.getWorldDirection(Q),$.copy(r.position).sub(i),a.value=Q.angleTo($)>j,a.value&&(s.get("cameraDistance").value=r.position.distanceTo(i),Q.copy(i).project(r),this.screenPosition.set(.5*(Q.x+1),.5*(Q.y+1))),this.time+=n*this.speed;const t=this.time-e;s.get("radius").value=t,t>=2*(s.get("maxRadius").value+e)&&(this.active=!1,a.value=!1)}}},ee=class extends C{constructor({blendFunction:e=S.NORMAL,intensity:t=1}={}){super("SepiaEffect","uniform float intensity;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=vec3(dot(inputColor.rgb,vec3(1.0-0.607*intensity,0.769*intensity,0.189*intensity)),dot(inputColor.rgb,vec3(0.349*intensity,1.0-0.314*intensity,0.168*intensity)),dot(inputColor.rgb,vec3(0.272*intensity,0.534*intensity,1.0-0.869*intensity)));outputColor=vec4(color,inputColor.a);}",{blendFunction:e,uniforms:new Map([["intensity",new i.Uniform(t)]])})}getIntensity(){return this.uniforms.get("intensity").value}setIntensity(e){this.uniforms.get("intensity").value=e}},te=0,ne=1,ie=2,re=3,se=4,ae=class extends C{constructor({blendFunction:e=S.NORMAL,adaptive:t=!0,mode:n=(t?ie:ne),resolution:r=256,maxLuminance:s=16,whitePoint:a=s,middleGrey:o=.6,minLuminance:l=.01,averageLuminance:u=1,adaptationRate:c=1}={}){super("ToneMappingEffect","#include <tonemapping_pars_fragment>\nuniform lowp sampler2D luminanceBuffer;uniform float whitePoint;uniform float middleGrey;\n#ifndef ADAPTIVE\nuniform float averageLuminance;\n#endif\nvec3 Reinhard2ToneMapping(vec3 color){color*=toneMappingExposure;float l=linearToRelativeLuminance(color);\n#ifdef ADAPTIVE\nfloat lumAvg=unpackRGBAToFloat(texture2D(luminanceBuffer,vec2(0.5)));\n#else\nfloat lumAvg=averageLuminance;\n#endif\nfloat lumScaled=(l*middleGrey)/max(lumAvg,1e-6);float lumCompressed=lumScaled*(1.0+lumScaled/(whitePoint*whitePoint));lumCompressed/=(1.0+lumScaled);return clamp(lumCompressed*color,0.0,1.0);}void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){\n#ifdef REINHARD2\noutputColor=vec4(Reinhard2ToneMapping(inputColor.rgb),inputColor.a);\n#else\noutputColor=vec4(toneMapping(inputColor.rgb),inputColor.a);\n#endif\n}",{blendFunction:e,uniforms:new Map([["luminanceBuffer",new i.Uniform(null)],["maxLuminance",new i.Uniform(s)],["whitePoint",new i.Uniform(a)],["middleGrey",new i.Uniform(o)],["averageLuminance",new i.Uniform(u)]])}),this.renderTargetLuminance=new i.WebGLRenderTarget(1,1,{minFilter:void 0!==i.LinearMipmapLinearFilter?i.LinearMipmapLinearFilter:i.LinearMipMapLinearFilter,magFilter:i.LinearFilter,stencilBuffer:!1,depthBuffer:!1}),this.renderTargetLuminance.texture.name="Luminance",this.renderTargetLuminance.texture.generateMipmaps=!0,this.luminancePass=new _({renderTarget:this.renderTargetLuminance}),this.adaptiveLuminancePass=new g(this.luminancePass.getTexture(),{minLuminance:l,adaptationRate:c}),this.uniforms.get("luminanceBuffer").value=this.adaptiveLuminancePass.getTexture(),this.mode=null,this.setMode(n),this.setResolution(r)}getMode(){return this.mode}setMode(e){if(this.mode!==e){switch(this.defines.clear(),e){case te:this.defines.set("toneMapping(texel)","ReinhardToneMapping(texel)");break;case re:this.defines.set("toneMapping(texel)","OptimizedCineonToneMapping(texel)");break;case se:this.defines.set("toneMapping(texel)","ACESFilmicToneMapping(texel)");break;default:this.defines.set("toneMapping(texel)","texel")}e===ne?this.defines.set("REINHARD2","1"):e===ie&&(this.defines.set("REINHARD2","1"),this.defines.set("ADAPTIVE","1")),this.mode=e,this.setChanged()}}getAdaptiveLuminanceMaterial(){return this.adaptiveLuminancePass.getFullscreenMaterial()}get resolution(){return this.getResolution()}set resolution(e){this.setResolution(e)}getResolution(){return this.luminancePass.getResolution().getWidth()}setResolution(e){const t=Math.max(0,Math.ceil(Math.log2(e))),n=Math.pow(2,t);this.luminancePass.getResolution().setPreferredSize(n,n),this.getAdaptiveLuminanceMaterial().setMipLevel1x1(t)}get adaptive(){return this.defines.has("ADAPTIVE")}set adaptive(e){this.mode=e?ie:ne}get adaptationRate(){return this.getAdaptiveLuminanceMaterial().getAdaptationRate()}set adaptationRate(e){this.getAdaptiveLuminanceMaterial().setAdaptationRate(e)}get distinction(){return console.warn(this.name,"distinction was removed."),1}set distinction(e){console.warn(this.name,"distinction was removed.")}update(e,t,n){this.mode===ie&&(this.luminancePass.render(e,t),this.adaptiveLuminancePass.render(e,null,null,n))}initialize(e,t,n){this.adaptiveLuminancePass.initialize(e,t,n)}},oe=0,le=1,ue=class extends C{constructor({blendFunction:e=S.NORMAL,technique:t=oe,eskil:n=!1,offset:r=.5,darkness:s=.5}={}){super("VignetteEffect","uniform float offset;uniform float darkness;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){const vec2 center=vec2(0.5);vec3 color=inputColor.rgb;\n#if VIGNETTE_TECHNIQUE == 0\nfloat d=distance(uv,center);color*=smoothstep(0.8,offset*0.799,d*(darkness+offset));\n#else\nvec2 coord=(uv-center)*vec2(offset);color=mix(color,vec3(1.0-darkness),dot(coord,coord));\n#endif\noutputColor=vec4(color,inputColor.a);}",{blendFunction:e,defines:new Map([["VIGNETTE_TECHNIQUE",t.toFixed(0)]]),uniforms:new Map([["offset",new i.Uniform(r)],["darkness",new i.Uniform(s)]])})}get eskil(){return this.getTechnique()===le}set eskil(e){this.setTechnique(e?le:oe)}getTechnique(){return Number(this.defines.get("VIGNETTE_TECHNIQUE"))}setTechnique(e){this.getTechnique()!==e&&(this.defines.set("VIGNETTE_TECHNIQUE",e.toFixed(0)),this.setChanged())}getOffset(){return this.uniforms.get("offset").value}setOffset(e){this.uniforms.get("offset").value=e}getDarkness(){return this.uniforms.get("darkness").value}setDarkness(e){this.uniforms.get("darkness").value=e}};new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,0,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([1,0,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([0,1,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([0,1,1]),new Float32Array([1,1,1]);new Float32Array(2),new Float32Array(2),new Float32Array([0,-.25,.25,-.125,.125,-.375,.375]),new Float32Array([0,0]),new Float32Array([.25,-.25]),new Float32Array([-.25,.25]),new Float32Array([.125,-.125]),new Float32Array([-.125,.125]),new Uint8Array([0,0]),new Uint8Array([3,0]),new Uint8Array([0,3]),new Uint8Array([3,3]),new Uint8Array([1,0]),new Uint8Array([4,0]),new Uint8Array([1,3]),new Uint8Array([4,3]),new Uint8Array([0,1]),new Uint8Array([3,1]),new Uint8Array([0,4]),new Uint8Array([3,4]),new Uint8Array([1,1]),new Uint8Array([4,1]),new Uint8Array([1,4]),new Uint8Array([4,4]),new Uint8Array([0,0]),new Uint8Array([1,0]),new Uint8Array([0,2]),new Uint8Array([1,2]),new Uint8Array([2,0]),new Uint8Array([3,0]),new Uint8Array([2,2]),new Uint8Array([3,2]),new Uint8Array([0,1]),new Uint8Array([1,1]),new Uint8Array([0,3]),new Uint8Array([1,3]),new Uint8Array([2,1]),new Uint8Array([3,1]),new Uint8Array([2,3]),new Uint8Array([3,3]);he(0,0,0,0),new Float32Array([0,0,0,0]),he(0,0,0,1),new Float32Array([0,0,0,1]),he(0,0,1,0),new Float32Array([0,0,1,0]),he(0,0,1,1),new Float32Array([0,0,1,1]),he(0,1,0,0),new Float32Array([0,1,0,0]),he(0,1,0,1),new Float32Array([0,1,0,1]),he(0,1,1,0),new Float32Array([0,1,1,0]),he(0,1,1,1),new Float32Array([0,1,1,1]),he(1,0,0,0),new Float32Array([1,0,0,0]),he(1,0,0,1),new Float32Array([1,0,0,1]),he(1,0,1,0),new Float32Array([1,0,1,0]),he(1,0,1,1),new Float32Array([1,0,1,1]),he(1,1,0,0),new Float32Array([1,1,0,0]),he(1,1,0,1),new Float32Array([1,1,0,1]),he(1,1,1,0),new Float32Array([1,1,1,0]),he(1,1,1,1),new Float32Array([1,1,1,1]);function ce(e,t,n){return e+(t-e)*n}function he(e,t,n,i){const r=ce(e,t,.75),s=ce(n,i,.75);return ce(r,s,.875)}}}]);